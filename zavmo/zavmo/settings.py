"""
Django settings for zavmo project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path
from decouple import config
from dotenv import load_dotenv

# Load environment variables from .env file
load_dotenv(override=True)

# JWT settings
JWT_PUBLIC_KEY  = os.getenv('JWT_PUBLIC_KEY')
JWT_ALGORITHM   = os.getenv('JWT_ALGORITHM', 'RS256')
JWT_PRIVATE_KEY = os.getenv('JWT_PRIVATE_KEY','secret')
JWT_ISSUER      = os.getenv('JWT_ISSUER', 'https://login.zavmo.ai/auth/realms/fZavmo')
JWT_KEY_ID      = os.getenv('JWT_KEY_ID', 'zavmo-key')

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# TODO: We will generate a new secret key and store it in the .env file later
SECRET_KEY = 'django-insecure-nqjuapa+c2zs*c7e(w@1@$a%i580y700n$*!l804m-sqh+d*lc'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',  # Required for Django REST framework if you're using it
    'stage_app',    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    # 'corsheaders.middleware.CorsMiddleware',  # Disabling CORS middleware for now
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

     # NOTE: Using django-rest-framework-simplejwt and creating a custom authentication permission class
     # instead of using a middleware
    # 'zavmo.middleware.CustomJWTMiddleware', 
]

ROOT_URLCONF = 'zavmo.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'zavmo.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases


# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'dj_db_conn_pool.backends.postgresql',
        'NAME': config('POSTGRES_DB'),
        'USER': config('POSTGRES_USERNAME'),
        'PASSWORD': config('POSTGRES_PASSWORD'),
        'HOST': config('POSTGRES_HOST'),
        'PORT': config('POSTGRES_PORT', default='5432'),
        'CONN_MAX_AGE': 0,
        'POOL_OPTIONS': {
            'POOL_SIZE': 25,
            'MAX_OVERFLOW': 10,
            'RECYCLE': 300,
        }
    }
}

### Redis settings

CACHES = {
    'default': {
        "BACKEND": "django_redis.cache.RedisCache",
        'LOCATION': f'redis://{config("REDIS_HOST")}:{config("REDIS_PORT")}',
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "SERIALIZER": "django_redis.serializers.json.JSONSerializer",
            "PICKLE_VERSION": -1,  # You can remove this as it's not needed with JSON serializer
            "SOCKET_CONNECT_TIMEOUT": 10,
            "SOCKET_TIMEOUT": 10,
            "CONNECTION_POOL_ARGS": {
                "max_connections": 1000,
                "retry_on_timeout": True
            },
        },
        "KEY_PREFIX": "zavmo-cache-",  # Optional: helps identify JSON-serialized keys
        "TIMEOUT": 60 * 24 * 60 * 60,  # 60 days in seconds
    }
}
# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

REST_FRAMEWORK = {
    # Do not set 'DEFAULT_AUTHENTICATION_CLASSES' to avoid affecting all views
}


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR, "static")
os.makedirs(os.path.join(BASE_DIR, "static"), exist_ok=True)
STATIC_URL = 'static/'

MEDIA_URL  = '/media/'
os.makedirs(os.path.join(BASE_DIR, "media"), exist_ok=True)

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
